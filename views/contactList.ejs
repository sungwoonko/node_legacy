<%-include('layouts/header.ejs')%>

    <section class="contact-list-section">  
        <h2 class="section-title">문의 목록 입니다.</h2>  
        <div class="table-container">  
        <table class="contact-table">  
            <thead>  
            <tr>  
                <th>ID</th>  
                <th>이름</th>  
                <th>연락처</th>  
                <th>이메일</th>  
                <th>문의내용</th>  
                <th>상태</th>  
                <th>생성일</th>  
                <th>수정일</th>  
                <th>수정</th>  
                <th>삭제</th>  
            </tr>  
            </thead>  
            <tbody>  
            <% lists.forEach(function(item) { %>  
            <tr>  
                <td><%= item.id %></td>  
                <td><%= item.name %></td>  
                <td><%= item.phone %></td>  
                <td><%= item.email %></td>  
                <td><%= item.memo %></td>  
                <td>  
                    <% if(item.status === 'done') { %>  
                      <span class="status done">  
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" fill="#2ecc71">  
                          <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm-1.5 18l-5-5 1.414-1.414L10.5 14.086 17.086 7.5 18.5 8.914l-7.5 7.5z"/>  
                        </svg>  
                        처리 완료  
                      </span>  
                    <% } else { %>  
                      <span class="status pending">  
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" fill="#f39c12">  
                          <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 17h-2v-2h2v2zm0-4h-2V7h2v6z"/>  
                        </svg>  
                        대기 중  
                      </span>  
                    <% } %>  
                  </td>  
                <td><%= item.create_at %></td>  
                <td><%= item.modify_at %></td>  
                <td>  
                <button class="action-button update-button" onclick="updateContact(<%= item.id %>)">  
                    UPDATE  
                </button>  
                </td>  
                <td>  
                <button class="action-button delete-button" onclick="deleteContact(<%= item.id %>)">  
                    DELETE  
                </button>  
                </td>  
            </tr>  
            <% }) %>  
            </tbody>  
        </table>  
        </div>  
    </section>

    <script>
        // 자주 사용하는 방식 : fetch
        async function updateContact(contactId) {
            try {
                const response = await fetch(`/api/contactUpdate/${contactId}`, {
                    method: 'PUT', // HTTP 메서드
                    headers: {
                        'Content-Type': 'application/json' // 데이터 형식 지정 (필요한 경우)
                    }
                    // PUT 요청의 경우 body가 필요할 수 있음
                });

                if (!response.ok) {
                    throw new Error('업데이트 오류'); // throw를 통해 catch절로 오류 객체 전달
                }
                alert('문의사항이 업데이트되었습니다.');
                location.reload(); // 페이지 새로고침 또는 다른 업데이트 방식 선택
            } catch (error) {
                console.error('업데이트 오류:', error); // 오류 처리
            }
        }
        function deleteContact(contactID) {
            $.ajax({
                url: `/api/contactDelete/${contactID}`,
                type : 'DELETE',
                success: function(response){
                    //수정 성공 시
                    alert("문의사항이 삭제되었습니다.")
                    location.reload()
                },
                error: function(error){
                    // 오류 처리
                    console.error("삭제 오류: ", error)
                }
            })
        }
    </script>

<%-include('layouts/footer.ejs')%>